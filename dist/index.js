var e=require("path"),t=require("lodash/template"),r=require("js-yaml"),n=require("fs"),i=require("lodash/set"),o=require("lodash"),a=require("aggregate-error"),l=require("@semantic-release/error"),s=require("lodash/isString"),d=require("util");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=/*#__PURE__*/u(e),f=/*#__PURE__*/u(t),p=/*#__PURE__*/u(r),m=/*#__PURE__*/u(n),g=/*#__PURE__*/u(i),h=/*#__PURE__*/u(a),w=/*#__PURE__*/u(l),q=/*#__PURE__*/u(s);const y=["cwd","env","stdout","stderr","logger"],v=require("../../package.json"),[b]=v.homepage.split("#"),$=e=>q.default(e)?e:d.inspect(e,{breakLength:Infinity,depth:2,maxArrayLength:5}),j=e=>`${b}/blob/master/${e}`,E={cmd:e=>({message:`Invalid \`cmd\` option for phase \`${e.phase}\`.`,details:`The [\`cmd\` option](${j("README.md#options")}) is required and must be a non empty \`String\`.\n\nYour configuration for the \`cmd\` option is \`${$(e.template)}\`.`}),cwd:e=>({message:"Invalid `cwd` option.",details:`The [\`cwd\` option](${j("README.md#options")}) if defined, must be a non empty \`String\`.\n\nYour configuration for the \`cwd\` option is \`${$(e.cwd)}\`.`})};function S(e,t){const{message:r,details:n}=E[e](t);return new w.default(r,e,n)}const k=e=>o.isString(e)&&e.trim().length>0,A={cmd:k,cwd:(M=k,e=>o.isNil(e)||M(e))};var M;exports.prepare=function(e,t){const r=e.commands.filter(e=>"prepare"===e.phase);if(r.length>0)return function(e){const t=e.flatMap(e=>Object.keys(A).reduce((t,r)=>(0,A[r])(e[r])?t:t.concat(S(r,e)),[]));if(t.length>0)throw new h.default(t)}(r),r.forEach(e=>{((e,t)=>{let{cwd:r=process.cwd(),logger:n}=t,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t.indexOf(r=o[n])>=0||(i[r]=e[r]);return i}(t,y);const o=f.default(e.template)(i);n.log("Call script %s",o);const a=e.cwd?c.default.resolve(r,e.cwd):r,l=c.default.resolve(a,e.file),s=p.default.load(m.default.readFileSync(l,"utf8"));if("object"!=typeof s||null===s)throw new Error(`The file ${l} is not a valid YAML file.`);g.default(s,e.selector,o),m.default.writeFileSync(l,p.default.dump(s))})(e,t)}),"Prepared"};
//# sourceMappingURL=index.js.map
